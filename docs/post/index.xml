<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>t-asa2000.net</title><description>Recent content on t-asa2000.net</description><link>https://t-asa2000.net/post/</link><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://t-asa2000.net/post/index.xml" rel="self" type="application/rss+xml"/><item><title>MisskeyプラグインでレジストリAPIを使った同期機能の実装と注意点</title><link>https://t-asa2000.net/post/202412_01/</link><pubDate>Sat, 07 Dec 2024 23:28:00 +0900</pubDate><guid>https://t-asa2000.net/post/202412_01/</guid><description>&lt;blockquote>
&lt;p>この記事は &lt;a class="link" href="https://adventar.org/calendars/10208" target="_blank" rel="noopener"
>&lt;strong>「Misskey Advent Calendar 2024」 8日目&lt;/strong>&lt;/a> の記事です．&lt;/p>
&lt;/blockquote>
&lt;p>こんにちは．&lt;a class="link" href="https://misskey.io/" target="_blank" rel="noopener"
>Misskey.io&lt;/a>で活動している&lt;a class="link" href="https://misskey.io/@asata" target="_blank" rel="noopener"
>asata&lt;/a>と申します．&lt;/p>
&lt;p>今回は &lt;a class="link" href="https://github.com/misskey-dev/misskey" target="_blank" rel="noopener"
>Misskey&lt;/a> のプラグインを自作していく中で気が付いた &lt;strong>「レジストリAPI」&lt;/strong> に関する知見をまとめていけたらなと思っています．&lt;/p>
&lt;h2 id="自作したプラグイン">自作したプラグイン&lt;/h2>
&lt;p>私が今回作成したのは &lt;strong>「ノート非表示プラグイン」&lt;/strong> というもので，これは個別のノート単位で疑似的なミュートができるというものになります．&lt;/p>
&lt;p>タイムライン上に不快に思うような内容が流れてきて，&lt;strong>「その人自体は嫌いじゃないけどこのノートだけはもう目に入れたくない」&lt;/strong> みたいな場面を想定して作りました．（単純に自分がそういう時にあったらいいな・・・と思ってたので）&lt;/p>
&lt;p>&lt;a class="link" href="https://misskey.io/@asata/pages/notemuteplugin" target="_blank" rel="noopener"
>https://misskey.io/@asata/pages/notemuteplugin&lt;/a>&lt;/p>
&lt;img src="img1.png" width=500>
&lt;h2 id="プラグインのデータをサーバー上で同期させたかった">プラグインのデータをサーバー上で同期させたかった&lt;/h2>
&lt;p>Misskeyでは，クライアントに関する情報は基本的にクライアントに保存されます．&lt;/p>
&lt;p>なので，どういうプラグインを入れたとか，そのプラグインの設定やデータはサーバー上に保存されません．&lt;/p>
&lt;p>同じプラグインをスマホとPCで使いたければ，それぞれのデバイスにインストールすることになります．しかし，両方のデバイスで&lt;strong>常に同じ状態をキープするということはできない&lt;/strong>わけです．&lt;/p>
&lt;p>ただ私は，できることなら実際のミュート機能の使い勝手に近づけたいと &lt;strong>「ミュート設定したノートIDのリストをデバイス間で同期したい」&lt;/strong> と考えていました．そんな中，タイムラインで教えて頂いたのが &lt;strong>「レジストリAPI」&lt;/strong> です．&lt;/p>
&lt;h2 id="レジストリって何">レジストリって何？&lt;/h2>
&lt;p>Misskeyにおける「レジストリ」とは，&lt;strong>「キー」と「値」の組み合わせ&lt;/strong> で自由な値をサーバー上に保存しておける機能です．値の型は，文字列・数値・配列・オブジェクト，どれでもOKみたいです．&lt;/p>
&lt;p>Misskey自体も，各種設定を保存するためにレジストリを使用しています．&lt;/p>
&lt;img src="img2.png" width=400>
&lt;p>レジストリは階層構造となっており，「ドメイン」⇒「スコープ」⇒「キー」という形となっています．「スコープ」は client/aaa のように多重構造（入れ子）にすることも可能です．&lt;/p>
&lt;h2 id="レジストリを使えば設定が同期できるはずだった">レジストリを使えば設定が同期できる・・・はずだった&lt;/h2>
&lt;p>これを踏まえて，私は &lt;strong>「同じドメイン・スコープ・キーでレジストリを読み書きすれば，ミュート設定したノートを同期できる」&lt;/strong> と考え実装に入りました．&lt;/p>
&lt;p>Misskey プラグインは，&lt;a class="link" href="https://github.com/aiscript-dev/aiscript" target="_blank" rel="noopener"
>&lt;strong>AiScript&lt;/strong>&lt;/a> というJavaScriptベースの言語で記述します．また，Misskey内でAiScriptを使用する場合は &lt;a class="link" href="https://misskey-hub.net/ja/docs/for-developers/plugin/plugin-api-reference/" target="_blank" rel="noopener"
>&lt;strong>「AiScript Misskey 拡張API」&lt;/strong>&lt;/a>と呼ばれる専用のAPIが使用できます．今回はこちらを使ってプラグインからMisskeyのAPIを叩きます．&lt;/p>
&lt;p>↓こんな感じでMisskeyのレジストリAPIを叩きます．&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 非表示ノートの設定(サーバー)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="nx">setMutedNotesServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">notes&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Mk&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">api&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;i/registry/set&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;mutedNotes&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">scope&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;asataPlugin&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">value&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">notes&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">domain&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;asata&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>さて，ここで問題が生じました．上記のコード内ではドメインを &lt;strong>「asata」&lt;/strong> としていますが，実際のレジストリでは &lt;strong>全く関係のない文字列をドメインとして&lt;/strong> 読み書き操作が行われていたのです．&lt;/p>
&lt;img src="img3.png" width=400>
&lt;p>しかも，この文字列，プラグインをインストールし直すごとに変わってしまいます．つまりこれは &lt;strong>「異なるデバイス間で同じレジストリのキーを参照できない」＝「同期ができない」&lt;/strong> ということになります．&lt;/p>
&lt;h2 id="外部からレジストリapiを叩くとドメインは無視される">外部からレジストリAPIを叩くとドメインは無視される&lt;/h2>
&lt;p>Misskeyのバックエンドのソースコードを見てみると，その原因が分かりました．&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/misskey-dev/misskey/blob/dac3b1f40591cb697cf650bff7e4cb99cc964f89/packages/backend/src/server/api/endpoints/i/registry/set.ts" target="_blank" rel="noopener"
>packages/backend/src/server/api/endpoints/i/registry/set.ts&lt;/a> より引用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ts" data-lang="ts">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">@Injectable&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">Endpoint&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">typeof&lt;/span> &lt;span class="na">meta&lt;/span>&lt;span class="err">,&lt;/span> &lt;span class="na">typeof&lt;/span> &lt;span class="na">paramDef&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// eslint-disable-line import/no-default-export
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">constructor&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">private&lt;/span> &lt;span class="nx">registryApiService&lt;/span>: &lt;span class="kt">RegistryApiService&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">meta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">paramDef&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ps&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">me&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">accessToken&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">registryApiService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="kr">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">me&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">accessToken&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nx">accessToken&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">domain&lt;/span> &lt;span class="o">??&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">ps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">scope&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>スマホ等では少し見辛いかもしれませんが，レジストリAPI用の関数に投げる第2引数が &lt;code>accessToken ? accessToken.id : (ps.domain ?? null)&lt;/code> となっています．&lt;/p>
&lt;p>どうやら外部からレジストリAPIを叩く場合は &lt;strong>「指定したドメイン名を無視してアクセストークンのIDをドメインにする」&lt;/strong> という仕様のようです．ドメイン名となっていた謎の文字列は，インストール時にプラグイン用に生成されたアクセストークンのIDだったみたいですね．&lt;/p>
&lt;h2 id="レジストリを使った同期をするための方法">レジストリを使った同期をするための方法&lt;/h2>
&lt;p>ただ，プラグインのデータをレジストリ経由で同期できないという訳ではありません．各デバイスにインストールされたプラグインが &lt;strong>同じアクセストークンを使用すれば&lt;/strong> 同期を行うことができます．&lt;/p>
&lt;p>残念ながら，プラグインの実装ではこの問題をどうにかすることは不可能なので， &lt;strong>プラグインを使うユーザーに対して&lt;/strong> 以下の操作を促すことになります．&lt;/p>
&lt;p>2つの &lt;strong>デバイス「A」と「B」&lt;/strong> でMisskeyをしていると仮定して説明します．&lt;/p>
&lt;ol>
&lt;li>&lt;strong>デバイスA&lt;/strong> でプラグインをインストールする．&lt;/li>
&lt;li>「設定のバックアップ」機能で，インストール直後のクライアントの状態をバックアップする．&lt;/li>
&lt;li>&lt;strong>デバイスB&lt;/strong> 上で「設定のバックアップ」機能から &lt;strong>デバイスA&lt;/strong> で作成したバックアップをクライアントに適用する．&lt;/li>
&lt;/ol>
&lt;p>これにより，2つのデバイス上で同じプラグインがインストールされます．しかも，&lt;strong>デバイスA&lt;/strong> のインストール時に生成したアクセストークンが &lt;strong>紐づいた&lt;/strong> 状態でインストールされます．&lt;/p>
&lt;p>これでようやく &lt;strong>レジストリを使った同期&lt;/strong> ができるようになります．&lt;/p>
&lt;h2 id="最後に">最後に&lt;/h2>
&lt;p>以上， Misskey プラグインに（無理矢理ですが）同期機能を実装してみたという記事でした．&lt;/p>
&lt;p>ドメイン名を強制的に書き換えるという仕様は，セキュリティ的にやむを得ないんじゃないかなと思っています．&lt;/p>
&lt;ul>
&lt;li>悪意のあるプログラムがドメインを偽装してレジストリ書き換える&lt;/li>
&lt;li>たまたまサードパーティー同士でドメインが重複してしまう&lt;/li>
&lt;/ul>
&lt;p>みたいなケースも十分考えられますからね．&lt;/p>
&lt;p>最後までお読みいただき，ありがとうございました．&lt;/p></description></item><item><title>「SNSは連絡ツールとは別」←この考え方って古い？</title><link>https://t-asa2000.net/post/202408_02/</link><pubDate>Thu, 15 Aug 2024 13:07:09 +0900</pubDate><guid>https://t-asa2000.net/post/202408_02/</guid><description>&lt;h2 id="インターネットとの出会い">インターネットとの出会い&lt;/h2>
&lt;p>私がインターネットを触り始めたのは小学生の頃(2008年)．当時は当然のことながら，自分から何かを発信するためのアカウントや場所は持っていませんでした．Twitterもアカウントなしで，その都度見たい人のユーザーページに飛んで見てたので，&lt;strong>真の意味でのROM専&lt;/strong> でした．&lt;/p>
&lt;p>当時はTwitterなどのSNSは人口が少なく，必然的に &lt;strong>画面の向こう側にいる知らない人だけに向けて&lt;/strong>，発信やコミュニケーションを取らざるを得なかったわけです．&lt;/p>
&lt;p>アカウントこそ持っていなかったのですが，その当時のイメージが強いので，私は未だにSNSを &lt;strong>「画面の向こう側の人とやり取りするツール」&lt;/strong> だと思っています．&lt;/p>
&lt;h2 id="snsと連絡ツールの境界線">SNSと連絡ツールの境界線&lt;/h2>
&lt;p>まず私の中での定義として以下のように分けてます．&lt;/p>
&lt;ul>
&lt;li>&lt;strong>SNS&lt;/strong> : 世界中の誰に見られても良い前提で短い発信を行うもの(基本的に一方向)
&lt;ul>
&lt;li>X(旧Twitter)，Mastodon，Misskey，Threads，Instagramなど&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>連絡ツール&lt;/strong> : 現実の友人知人・家族との生活上必要な双方向のやり取りを行うもの
&lt;ul>
&lt;li>LINEなど&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>昨今，自分と同世代の若者達の一部が，InstagramのDMしか使わないとか，俗に言う &lt;strong>「LINE離れ」&lt;/strong> みたいな話を聞くんですけども，&lt;/p>
&lt;p>私としては &lt;strong>「公開空間のアカウントで非公開なやり取りをする」&lt;/strong> ということにすごく気持ち悪さ，セキュリティやプライバシー上の危険性を感じてしまうのです．&lt;/p>
&lt;p>奇跡的にも自分はこれまで，インスタのDMでやり取りするような人間関係に遭遇しなかったのですが，万が一そうせざるを得なかった場合はDM専用のアカウントを作って運用していたと思います．&lt;/p>
&lt;h2 id="内輪ネタを書かないリア垢も作らない">内輪ネタを書かない，リア垢も作らない&lt;/h2>
&lt;p>上述のようにDMだけの運用なら &lt;strong>「連絡ツール」&lt;/strong> という扱いになるので，まだ自分としても許容できます．&lt;/p>
&lt;p>問題はタイムラインへの投稿です．&lt;/p>
&lt;p>私も高専時代，Twitterを使っていて内輪のフォロイー・フォロワーの割合が8割くらいになってしまい，&lt;strong>「SNS」&lt;/strong> にも拘わらず内輪寄りのコミュニケーションになりかけてしまったことがあります．&lt;/p>
&lt;p>それでも，気を付けていたことは &lt;strong>「内輪ネタをタイムラインに書かない」&lt;/strong> ということです．&lt;/p>
&lt;p>ここで言う内輪ネタとは，当時の学校の独自の教科名や授業内容についてのこと，現実の友人との間で起きた出来事，つまり &lt;strong>私と物理的に同じ空間にいる人じゃないと分からない情報&lt;/strong> です．&lt;/p>
&lt;p>「だったらフォロー承認制のリア垢を作れば良いじゃん」&lt;/p>
&lt;p>これを見てそう思った人もいるかもしれません．しかし，鍵垢にしてようが間違って知らない人のフォローを承認してしまう可能性もゼロではありません．&lt;/p>
&lt;p>例えば私が何かの投稿がバズったor炎上した時に，過去の投稿やフォロイー・フォロワーから辿られて，身元を特定されたり他の現実の友人達がトラブルに巻き込まれるかもしれません．私はリスクを負ったり他人に迷惑をかけてまで，SNSに本腰を入れるつもりはありません．&lt;/p>
&lt;p>「インターネットを警戒し過ぎなのでは」って思われるかもしれない．でも，それが正解だと思います．&lt;/p>
&lt;p>そもそも &lt;strong>インターネットは怖い場所&lt;/strong> です．ただ，スマホの普及で&lt;/p>
&lt;ul>
&lt;li>周囲がInstagramをやってる&lt;/li>
&lt;li>電車で隣の人がTwitterを開いてる&lt;/li>
&lt;/ul>
&lt;p>これが当たり前になった現代，インターネット上の公開空間に &lt;strong>参加すること&lt;/strong> への抵抗が薄れてきたことで，&lt;br>
世の中の風潮も「リアルとネットの壁を無くす＝SNSも連絡手段の一つだと捉える」という風に変わっていったのだと考えています．&lt;/p></description></item><item><title>発達障害持ちの僕がこまること「荷物が上手く捌けない」</title><link>https://t-asa2000.net/post/202303_02/</link><pubDate>Sat, 11 Mar 2023 10:07:46 +0900</pubDate><guid>https://t-asa2000.net/post/202303_02/</guid><description>&lt;img src="https://t-asa2000.net/img/pakutaso/Nimotsu1.jpg" alt="Featured image of post 発達障害持ちの僕がこまること「荷物が上手く捌けない」" />&lt;p>カバー写真: &lt;a class="link" href="https://www.pakutaso.com/" target="_blank" rel="noopener"
>ぱくたそ&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>～おことわり～&lt;/strong>&lt;br>
この記事の筆者は，幼少期から広汎性発達障害（のグレーゾーン）の傾向が見られたものの，その当時は医師による正式な診断は受けていませんでした．ただし，執筆時点では心療内科より正式にADHDの診断をもらっています．また，この手の話題は個人による症状差が大きいため，あくまで私個人のケースとして捉えてもらえると幸いです．&lt;/p>
&lt;/blockquote>
&lt;h2 id="普段の荷物">普段の荷物&lt;/h2>
&lt;p>皆さんがいつも外出する時，絶対に必要なものって何でしょうか．少なくとも以下の3つは，どんな場合でも常に携帯してないといけないと思います．&lt;/p>
&lt;ul>
&lt;li>家の鍵（＋車の鍵）&lt;/li>
&lt;li>財布&lt;/li>
&lt;li>携帯電話&lt;/li>
&lt;/ul>
&lt;p>私は基本，ズボンの左前ポケットに財布，右前ポケットに携帯電話を入れてます．ただ，鍵などを入れる場所がないので，それらを持ち運ぶためだけに&lt;strong>ショルダーポーチ&lt;/strong>を携帯します．定期券や交通系ICカードも，ショルダーポーチにくっつけてます．&lt;/p>
&lt;p>加えて，私は学生ですので教科書などを&lt;strong>バックパック&lt;/strong>で持ち歩きます．&lt;/p>
&lt;p>さらに，悪天候時には傘が必要です．&lt;/p>
&lt;p>ここまでの荷物の構成は以下のようになります．ついでに，写真も撮っておきました（床が汚くてごめんなさい）．&lt;/p>
&lt;ul>
&lt;li>財布（左ポケット）&lt;/li>
&lt;li>携帯電話（右ポケット）&lt;/li>
&lt;li>ショルダーポーチ&lt;/li>
&lt;li>バックパック&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://t-asa2000.net/post/202303_02/img1.jpg"
width="1318"
height="859"
srcset="https://t-asa2000.net/post/202303_02/img1_hu058885b34620def91fc97ee0b5ecc309_324414_480x0_resize_q75_box.jpg 480w, https://t-asa2000.net/post/202303_02/img1_hu058885b34620def91fc97ee0b5ecc309_324414_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="368px"
>&lt;/p>
&lt;p>さて，ここから実体験の話をしていきます．&lt;/p>
&lt;h2 id="困りごと1-ショルダーポーチとバックパックの紐が絡まる">困りごと1: ショルダーポーチとバックパックの紐が絡まる&lt;/h2>
&lt;p>ショルダーポーチとバックパックを体から降ろすときに，身に着けた順番と逆順で外していかなくてはいけませんが，順番を間違えて紐が絡まってオロオロしてしまうときが多々あります．特に，バスや電車などの公共交通に乗って席に着いた際に，荷物をどかしたいなと思って人前でこれをやらかすのが，本当に恥ずかしい．&lt;/p>
&lt;h2 id="困りごと2-傘を持ち歩いているとき">困りごと2: 傘を持ち歩いているとき&lt;/h2>
&lt;p>傘を持ち歩いているときは最悪です．片手が塞がっているので，例えば土足禁止の空間（傘立てがない場所）に入ったとき，靴の履き替えで時間がかかります．というか，手先が不器用なのでただでさえ時間がかかるのに・・・&lt;/p>
&lt;p>後ろに人がいると，自分で詰まってしまって，ただただ申し訳なく切ない気持ちになります．&lt;/p>
&lt;h2 id="外出時以外でも">外出時以外でも&lt;/h2>
&lt;p>夕飯の支度とか，食器の片づけとか，普段のちょっとした動作の中で，今手に持っているものをどこにどかせば良いのか，次に何を手に持てば良いのか，うまく脳内で計算できません．普通の人ならすぐ終わる作業が，2～3倍くらいの時間がかかってしまいます．&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>とにかく日頃の生活において，カバン類や手に持っている荷物を瞬間的に捌くのが，本当に苦手です．全体的な動作が，周囲から見てもちょっと「子供っぽい」「もたもたしている」「変な人っぽい」って感じになって，「この人変だよね」って思われて距離を置かれる（もしくは自分でそう見られてると思い込んで距離を置いてしまう）ことがあります．&lt;/p>
&lt;p>もっと要領良く生きていきたいですね・・・&lt;/p></description></item><item><title>「ホームページを作って欲しい」って言ってきた人に見せる記事</title><link>https://t-asa2000.net/post/20230310/</link><pubDate>Fri, 10 Mar 2023 01:36:26 +0900</pubDate><guid>https://t-asa2000.net/post/20230310/</guid><description>&lt;img src="https://t-asa2000.net/post/20230310/img1.png" alt="Featured image of post 「ホームページを作って欲しい」って言ってきた人に見せる記事" />&lt;h2 id="プロローグ">プロローグ&lt;/h2>
&lt;p>世間一般よりもほんの少しだけPCスキルがある・・・そんな感じの中途半端なデジタルの素質を持ってる筆者なんですが，人生で何回かHPを作ってくれと頼まれたりしてきました．&lt;/p>
&lt;p>今の時代&lt;/p>
&lt;ul>
&lt;li>Wixで誰でも作れるから人に頼まなくても良くね？&lt;/li>
&lt;li>Twitterやインスタで宣伝できるからHPなんか要らなくね？&lt;/li>
&lt;/ul>
&lt;p>と言われてもおかしくない時代なんですが，それでも「ホームページ」という物への需要はまだ完全に無くなってはいないみたいです．&lt;/p>
&lt;p>今回の記事は，あまり技術関係に詳しくない方向けに書いたものです．&lt;/p>
&lt;h2 id="ホームページを作る意味">ホームページを作る意味&lt;/h2>
&lt;p>一番大きなことは「情報の整理・集約化」だと思います．&lt;/p>
&lt;p>例えば，あなたが飲食店の経営者で，毎日，TwitterやInstagramにお店のメニューを写真付きで投稿しているとします．拡散効果は期待できるでしょう．ですが，その情報は&lt;/p>
&lt;p>「&lt;strong>時系列順に写真や文章が並んでいるだけ&lt;/strong>」&lt;/p>
&lt;p>であり，その情報の中にはお店からのお知らせや店主の独り言など，&amp;ldquo;他のカテゴリの情報&amp;rdquo; も含まれていますね．&lt;/p>
&lt;p>「&lt;strong>シンプルにお店のメニューだけが見たい&lt;/strong>」&lt;/p>
&lt;p>と思ったお客さんが，過去の投稿を遡って色んなメニューの説明を見ていくのは非常に利便性(ユーザビリティ)が悪いです．&lt;/p>
&lt;p>そんな時にホームページという，ググれば誰でも見つけられる場所（※）に料理の一覧を置いておくことで，&lt;strong>必要な人が必要な時に&lt;/strong>情報を得ることができます．&lt;/p>
&lt;blockquote>
&lt;p>※ググれば誰でも見つけられる場所といいましたが，Google 検索で上位に表示されるにはある程度の閲覧数が必要です．&lt;/p>
&lt;/blockquote>
&lt;h2 id="ホームページの正体">ホームページの正体&lt;/h2>
&lt;p>「ホームページの正体」と言うと語弊があるので「Webページの正体」の方が適切かもしれません．&lt;/p>
&lt;p>↓ざっくり言ってしまうとこれが「Webページの正体」です．&lt;/p>
&lt;img src="img1.png" width=500>
&lt;p>信じられないかもしれませんが，このダラダラと長いコードが「Webページ」です．極端な話，皆さんが普段見てるTwitter(アプリではなくブラウザ版)の正体もこれです．&lt;/p>
&lt;p>ここで，恐らく皆さんの頭にこんな疑問が出てくると思います．&lt;/p>
&lt;blockquote>
&lt;p>Q. でもwixとかホームページ・ビルダーって見た目そのままに作れるよ？&lt;/p>
&lt;/blockquote>
&lt;p>簡潔に言います．コードに起こす作業をwixやホームページ・ビルダーが&lt;strong>あなたの代わりにやってます．&lt;/strong>&lt;/p>
&lt;p>勿論，今どきのWeb屋さんもケースバイケースですが，人の手で書くコードは最小限に減らすための色々な工夫をしています．あの長いコード全てを自分で書くことはごく稀でしょう．&lt;/p>
&lt;h2 id="ホームページに関わる3つの要素">ホームページに関わる3つの要素&lt;/h2>
&lt;p>ホームページを作るうえで抑えておきたいのが，以下の3つの要素です．&lt;/p>
&lt;ol>
&lt;li>ホームページの中身（を生成するためのツール）&lt;/li>
&lt;li>サーバー（ホームページの置き場所）&lt;/li>
&lt;li>ドメイン（置き場所の住所）&lt;/li>
&lt;/ol>
&lt;p>ドメインというのは，&lt;strong>&lt;a class="link" href="https://www.google.co.jp" target="_blank" rel="noopener"
>www.google.co.jp&lt;/a>&lt;/strong> みたいなやつのことです．&lt;/p>
&lt;h3 id="中身サーバードメインが全てセット">中身・サーバー・ドメインが全てセット&lt;/h3>
&lt;p>1.と2.と3.が全てセットになったのが&lt;a class="link" href="https://ja.wix.com/" target="_blank" rel="noopener"
>「&lt;strong>wix&lt;/strong>」&lt;/a>や&lt;a class="link" href="https://sites.google.com/" target="_blank" rel="noopener"
>「&lt;strong>Google サイト&lt;/strong>」&lt;/a>みたいなものです．パワポ感覚でHPが作れます．業者に頼めないし簡易的なものでいいから作りたい，という用途には最適です．&lt;/p>
&lt;p>ただもちろん無料なので制約は色々あります．一番大きいのが「ドメイン」の制約だと思います．wix使ったことがないので分かりませんが，ドメインは「〇〇.wix.com」みたいな形式になると思います．間違ってたらごめんなさい．&lt;/p>
&lt;p>あと，wixの場合は画面内に「wixを使いませんか」みたいな広告が常駐するので，見栄えは悪くなりますね．&lt;/p>
&lt;h3 id="中身を作ってサーバードメインは別に用意">中身を作ってサーバー・ドメインは別に用意&lt;/h3>
&lt;p>恐らく2000年代まで個人で作るホームページの主流がこれ．&lt;a class="link" href="https://www.justsystems.com/jp/products/hpb/" target="_blank" rel="noopener"
>「&lt;strong>ホームページ・ビルダー&lt;/strong>」&lt;/a>などのソフトウェアを使って，見た目通りに作成します．その後，生成されたファイルをサーバーに手動でアップロード(コピー)します．&lt;/p>
&lt;p>中身をパソコンの中で作ってから，サーバーに持っていくイメージです．&lt;/p>
&lt;p>このサイトも，ホームページ・ビルダーとは全く別物ですが，「静的サイトジェネレーター」と呼ばれるツールを使って，PCの中でファイルを作ってから公開しています．&lt;/p>
&lt;p>お金払ってサーバー契約すれば，広告も勝手に載りませんし，ドメインも自分で契約したものを自由に使えるので，これが一番ホームページらしいホームページが作れるかと思います．&lt;/p>
&lt;h3 id="wixみたいなシステムをサーバーの中に設置してしまう奥の手">wixみたいなシステムをサーバーの中に設置してしまう(奥の手)&lt;/h3>
&lt;p>実は，先ほどの1+2+3の方法のように，ブラウザ上で更新してそのまま公開するシステムを，wixなどの大手サービスに頼らなくても，自分のサーバー内に設置することができます．&lt;/p>
&lt;p>それが「&lt;strong>CMS&lt;/strong>」と呼ばれるツールで，代表的なものが&lt;a class="link" href="https://ja.wordpress.org/" target="_blank" rel="noopener"
>&lt;strong>WordPress&lt;/strong>&lt;/a>です．&lt;/p>
&lt;p>ただこれは環境構築が専門の知識がいることと，サーバーの中にデータベースを作成したりするため，システムが煩雑になりやすいという欠点があります．また，セキュリティ的なリスクもあり，万全な体制と人的余裕がなければ基本おすすめできません．&lt;/p>
&lt;p>サーバー周りの管理をする専門の知識・技術を持った人がいて，それと別に内容を更新する人がいるのであれば，最適な方法だと思います．&lt;/p>
&lt;h2 id="hp作りを友人知人に委託したい人へ">HP作りを友人・知人に委託したい人へ&lt;/h2>
&lt;p>私はちゃんとした仕事としてWeb屋をやっている訳ではないので，世の中のWeb屋さん達がどういう風に仕事をしているのかは分かりません．&lt;/p>
&lt;p>ただ，個人的に今まで色々HPを作って来て思うのが，以下の点については，委託側と受託側で認識を共有して置いた方がいいような気がしました．&lt;/p>
&lt;h3 id="更新頻度">更新頻度&lt;/h3>
&lt;p>最初に基本的な情報(飲食店の例:アクセス，メニューなど)を書いたら後は放置する，あるいは最初の更新以降も定期的にお知らせなどを発信する，どれくらいのペースで更新していきたいのかは，予めイメージしておいた方がいいと思います．&lt;/p>
&lt;h3 id="どこまでを自分でやるか">どこまでを自分でやるか&lt;/h3>
&lt;p>本当に何も分からないと言う場合は，載せたい内容をWordファイルにまとめたり簡単なメモにして送ったり，という感じで良いと思いますし，逆に自分でも直接手を加えたい場合は，相手にもその旨伝えておいた方が良いかと思います．&lt;/p>
&lt;h3 id="どこまで相手に介入させるか">どこまで相手に介入させるか&lt;/h3>
&lt;p>ホームページの中身だけを作って欲しいか，サーバー内のファイルの操作も許可するか，そこら辺のルールもしっかりと決めておいた方がいいかもしれません．&lt;/p>
&lt;h3 id="引き継ぎ">引き継ぎ&lt;/h3>
&lt;p>これが一番難しいかなと思いました．先述の通り，我々も全てのコードを手打ちしている訳ではなく「ツール」に頼っているのですが，そのツールもホームページ・ビルダーのような初心者向けではなく，そこそこのスキルが求められる上級者向けのツールだったりします．&lt;/p>
&lt;p>例えば，このサイトは「Hugo」というツールを使って作ったのですが，この更新を後任者に引き継ぐのであれば，Hugoが使える人を引っ張ってくるか，最低限使い方をレクチャーするかしないといけない訳です．&lt;/p>
&lt;p>もっと面倒くさいのが「WordPress」のようなCMSで，例えばシステムがぶっ壊れた時の応急措置やら，データベース周りのパスワードやら，引き継がないといけない内容が多いこと，&lt;/p>
&lt;p>さらに，プラグインを使って機能を拡張していくのでシステムが煩雑になって・・・面倒くさいです．正直言ってあまり手を出したくないのです(使っている最中は楽だけど)&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>という訳で，今回の記事を通して伝えたかったことは&lt;/p>
&lt;ul>
&lt;li>HPを作る目的を今一度確認して欲しい&lt;/li>
&lt;li>中身＋サーバー＋ドメインの組み合わせを理解して欲しい&lt;/li>
&lt;li>誰かに頼むなら色々なルール決めや認識共有をして欲しい&lt;/li>
&lt;/ul>
&lt;p>ということでした．最後までご覧いただきありがとうございました．&lt;/p></description></item><item><title>ネタ切れ</title><link>https://t-asa2000.net/post/20230309/</link><pubDate>Thu, 09 Mar 2023 18:46:26 +0900</pubDate><guid>https://t-asa2000.net/post/20230309/</guid><description>&lt;p>ネタがない 町内&lt;br>
なななな なななな&lt;/p>
&lt;p>　終&lt;br>
ーーー&lt;br>
ＮＨＫ&lt;/p></description></item><item><title>Hugoに移行してみた</title><link>https://t-asa2000.net/post/20220903/</link><pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate><guid>https://t-asa2000.net/post/20220903/</guid><description>&lt;p>これまで格安VPSでWordPressサイトをホスティングしてましたが，色々な事情を考慮した結果 &lt;strong>GitHub Pages + Hugo&lt;/strong> に移行しました．&lt;/p>
&lt;p>移行と言ってもめんどくさかったので過去記事は全て消滅させました（笑）&lt;/p>
&lt;p>&lt;del>テーマ等は使わず，僕が以前手打ちHTML+CSSで作った個人サイトをベースに再構成しています．&lt;/del>&lt;/p>
&lt;p>&lt;del>（厳密にはHugoで生成してるのはブログ部分のみで，プロフィールページ等はHugoのシステムからは独立させています．）&lt;/del>&lt;/p>
&lt;p>&lt;strong>2023.3.6 追記&lt;/strong>&lt;/p>
&lt;p>コードブロックが使いたかったので，テーマを採用しました．個人サイトとブログを統合しました．&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack" target="_blank" rel="noopener"
>https://github.com/CaiJimmy/hugo-theme-stack&lt;/a>&lt;/p></description></item></channel></rss>