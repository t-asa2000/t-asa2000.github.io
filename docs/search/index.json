[{"content":" この記事は 「Misskey Advent Calendar 2024」 8日目 の記事です．\nこんにちは．Misskey.ioで活動しているasataと申します．\n今回は Misskey のプラグインを自作していく中で気が付いた 「レジストリAPI」 に関する知見をまとめていけたらなと思っています．\n自作したプラグイン 私が今回作成したのは 「ノート非表示プラグイン」 というもので，これは個別のノート単位で疑似的なミュートができるというものになります．\nタイムライン上に不快に思うような内容が流れてきて，「その人自体は嫌いじゃないけどこのノートだけはもう目に入れたくない」 みたいな場面を想定して作りました．（単純に自分がそういう時にあったらいいな・・・と思ってたので）\nhttps://misskey.io/@asata/pages/notemuteplugin\nプラグインのデータをサーバー上で同期させたかった Misskeyでは，クライアントに関する情報は基本的にクライアントに保存されます．\nなので，どういうプラグインを入れたとか，そのプラグインの設定やデータはサーバー上に保存されません．\n同じプラグインをスマホとPCで使いたければ，それぞれのデバイスにインストールすることになります．しかし，両方のデバイスで常に同じ状態をキープするということはできないわけです．\nただ私は，できることなら実際のミュート機能の使い勝手に近づけたいと 「ミュート設定したノートIDのリストをデバイス間で同期したい」 と考えていました．そんな中，タイムラインで教えて頂いたのが 「レジストリAPI」 です．\nレジストリって何？ Misskeyにおける「レジストリ」とは，「キー」と「値」の組み合わせ で自由な値をサーバー上に保存しておける機能です．値の型は，文字列・数値・配列・オブジェクト，どれでもOKみたいです．\nMisskey自体も，各種設定を保存するためにレジストリを使用しています．\nレジストリは階層構造となっており，「ドメイン」⇒「スコープ」⇒「キー」という形となっています．「スコープ」は client/aaa のように多重構造（入れ子）にすることも可能です．\nレジストリを使えば設定が同期できる・・・はずだった これを踏まえて，私は 「同じドメイン・スコープ・キーでレジストリを読み書きすれば，ミュート設定したノートを同期できる」 と考え実装に入りました．\nMisskey プラグインは，AiScript というJavaScriptベースの言語で記述します．また，Misskey内でAiScriptを使用する場合は 「AiScript Misskey 拡張API」と呼ばれる専用のAPIが使用できます．今回はこちらを使ってプラグインからMisskeyのAPIを叩きます．\n↓こんな感じでMisskeyのレジストリAPIを叩きます．\n1 2 3 4 5 6 7 8 9 // 非表示ノートの設定(サーバー) @setMutedNotesServer(notes) { Mk:api(\u0026#39;i/registry/set\u0026#39;, { key: \u0026#39;mutedNotes\u0026#39;, scope: [\u0026#39;asataPlugin\u0026#39;], value: notes, domain: \u0026#39;asata\u0026#39; }) } さて，ここで問題が生じました．上記のコード内ではドメインを 「asata」 としていますが，実際のレジストリでは 全く関係のない文字列をドメインとして 読み書き操作が行われていたのです．\nしかも，この文字列，プラグインをインストールし直すごとに変わってしまいます．つまりこれは 「異なるデバイス間で同じレジストリのキーを参照できない」＝「同期ができない」 ということになります．\n外部からレジストリAPIを叩くとドメインは無視される Misskeyのバックエンドのソースコードを見てみると，その原因が分かりました．\npackages/backend/src/server/api/endpoints/i/registry/set.ts より引用\n1 2 3 4 5 6 7 8 9 10 @Injectable() export default class extends Endpoint\u0026lt;typeof meta, typeof paramDef\u0026gt; { // eslint-disable-line import/no-default-export constructor( private registryApiService: RegistryApiService, ) { super(meta, paramDef, async (ps, me, accessToken) =\u0026gt; { await this.registryApiService.set(me.id, accessToken ? accessToken.id : (ps.domain ?? null), ps.scope, ps.key, ps.value); }); } } スマホ等では少し見辛いかもしれませんが，レジストリAPI用の関数に投げる第2引数が accessToken ? accessToken.id : (ps.domain ?? null) となっています．\nどうやら外部からレジストリAPIを叩く場合は 「指定したドメイン名を無視してアクセストークンのIDをドメインにする」 という仕様のようです．ドメイン名となっていた謎の文字列は，インストール時にプラグイン用に生成されたアクセストークンのIDだったみたいですね．\nレジストリを使った同期をするための方法 ただ，プラグインのデータをレジストリ経由で同期できないという訳ではありません．各デバイスにインストールされたプラグインが 同じアクセストークンを使用すれば 同期を行うことができます．\n残念ながら，プラグインの実装ではこの問題をどうにかすることは不可能なので， プラグインを使うユーザーに対して 以下の操作を促すことになります．\n2つの デバイス「A」と「B」 でMisskeyをしていると仮定して説明します．\nデバイスA でプラグインをインストールする． 「設定のバックアップ」機能で，インストール直後のクライアントの状態をバックアップする． デバイスB 上で「設定のバックアップ」機能から デバイスA で作成したバックアップをクライアントに適用する． これにより，2つのデバイス上で同じプラグインがインストールされます．しかも，デバイスA のインストール時に生成したアクセストークンが 紐づいた 状態でインストールされます．\nこれでようやく レジストリを使った同期 ができるようになります．\n【実際に同期機能を実装したプラグインのスクリーンショット】\n最後に 以上， Misskey プラグインに（無理矢理ですが）同期機能を実装してみたという記事でした．\nドメイン名を強制的に書き換えるという仕様は，セキュリティ的にやむを得ないんじゃないかなと思っています．\n悪意のあるプログラムがドメインを偽装してレジストリ書き換える たまたまサードパーティー同士でドメインが重複してしまう みたいなケースも十分考えられますからね．\n最後までお読みいただき，ありがとうございました．\n","date":"2024-12-07T23:28:00+09:00","image":"https://t-asa2000.net/img/default.jpg","permalink":"https://t-asa2000.net/post/202412_01/","title":"MisskeyプラグインでレジストリAPIを使った同期機能の実装と注意点"},{"content":"インターネットとの出会い 私がインターネットを触り始めたのは小学生の頃(2008年)．当時は当然のことながら，自分から何かを発信するためのアカウントや場所は持っていませんでした．Twitterもアカウントなしで，その都度見たい人のユーザーページに飛んで見てたので，真の意味でのROM専 でした．\n当時はTwitterなどのSNSは人口が少なく，必然的に 画面の向こう側にいる知らない人だけに向けて，発信やコミュニケーションを取らざるを得なかったわけです．\nアカウントこそ持っていなかったのですが，その当時のイメージが強いので，私は未だにSNSを 「画面の向こう側の人とやり取りするツール」 だと思っています．\nSNSと連絡ツールの境界線 まず私の中での定義として以下のように分けてます．\nSNS : 世界中の誰に見られても良い前提で短い発信を行うもの(基本的に一方向) X(旧Twitter)，Mastodon，Misskey，Threads，Instagramなど 連絡ツール : 現実の友人知人・家族との生活上必要な双方向のやり取りを行うもの LINEなど 昨今，自分と同世代の若者達の一部が，InstagramのDMしか使わないとか，俗に言う 「LINE離れ」 みたいな話を聞くんですけども，\n私としては 「公開空間のアカウントで非公開なやり取りをする」 ということにすごく気持ち悪さ，セキュリティやプライバシー上の危険性を感じてしまうのです．\n奇跡的にも自分はこれまで，インスタのDMでやり取りするような人間関係に遭遇しなかったのですが，万が一そうせざるを得なかった場合はDM専用のアカウントを作って運用していたと思います．\n内輪ネタを書かない，リア垢も作らない 上述のようにDMだけの運用なら 「連絡ツール」 という扱いになるので，まだ自分としても許容できます．\n問題はタイムラインへの投稿です．\n私も高専時代，Twitterを使っていて内輪のフォロイー・フォロワーの割合が8割くらいになってしまい，「SNS」 にも拘わらず内輪寄りのコミュニケーションになりかけてしまったことがあります．\nそれでも，気を付けていたことは 「内輪ネタをタイムラインに書かない」 ということです．\nここで言う内輪ネタとは，当時の学校の独自の教科名や授業内容についてのこと，現実の友人との間で起きた出来事，つまり 私と物理的に同じ空間にいる人じゃないと分からない情報 です．\n「だったらフォロー承認制のリア垢を作れば良いじゃん」\nこれを見てそう思った人もいるかもしれません．しかし，鍵垢にしてようが間違って知らない人のフォローを承認してしまう可能性もゼロではありません．\n例えば私が何かの投稿がバズったor炎上した時に，過去の投稿やフォロイー・フォロワーから辿られて，身元を特定されたり他の現実の友人達がトラブルに巻き込まれるかもしれません．私はリスクを負ったり他人に迷惑をかけてまで，SNSに本腰を入れるつもりはありません．\n「インターネットを警戒し過ぎなのでは」って思われるかもしれない．でも，それが正解だと思います．\nそもそも インターネットは怖い場所 です．ただ，スマホの普及で\n周囲がInstagramをやってる 電車で隣の人がTwitterを開いてる これが当たり前になった現代，インターネット上の公開空間に 参加すること への抵抗が薄れてきたことで，\n世の中の風潮も「リアルとネットの壁を無くす＝SNSも連絡手段の一つだと捉える」という風に変わっていったのだと考えています．\n","date":"2024-08-15T13:07:09+09:00","image":"https://t-asa2000.net/img/default.jpg","permalink":"https://t-asa2000.net/post/202408_02/","title":"「SNSは連絡ツールとは別」←この考え方って古い？"},{"content":"カバー写真: ぱくたそ\n～おことわり～\nこの記事の筆者は，幼少期から広汎性発達障害（のグレーゾーン）の傾向が見られたものの，その当時は医師による正式な診断は受けていませんでした．ただし，執筆時点では心療内科より正式にADHDの診断をもらっています．また，この手の話題は個人による症状差が大きいため，あくまで私個人のケースとして捉えてもらえると幸いです．\n普段の荷物 皆さんがいつも外出する時，絶対に必要なものって何でしょうか．少なくとも以下の3つは，どんな場合でも常に携帯してないといけないと思います．\n家の鍵（＋車の鍵） 財布 携帯電話 私は基本，ズボンの左前ポケットに財布，右前ポケットに携帯電話を入れてます．ただ，鍵などを入れる場所がないので，それらを持ち運ぶためだけにショルダーポーチを携帯します．定期券や交通系ICカードも，ショルダーポーチにくっつけてます．\n加えて，私は学生ですので教科書などをバックパックで持ち歩きます．\nさらに，悪天候時には傘が必要です．\nここまでの荷物の構成は以下のようになります．ついでに，写真も撮っておきました（床が汚くてごめんなさい）．\n財布（左ポケット） 携帯電話（右ポケット） ショルダーポーチ バックパック さて，ここから実体験の話をしていきます．\n困りごと1: ショルダーポーチとバックパックの紐が絡まる ショルダーポーチとバックパックを体から降ろすときに，身に着けた順番と逆順で外していかなくてはいけませんが，順番を間違えて紐が絡まってオロオロしてしまうときが多々あります．特に，バスや電車などの公共交通に乗って席に着いた際に，荷物をどかしたいなと思って人前でこれをやらかすのが，本当に恥ずかしい．\n困りごと2: 傘を持ち歩いているとき 傘を持ち歩いているときは最悪です．片手が塞がっているので，例えば土足禁止の空間（傘立てがない場所）に入ったとき，靴の履き替えで時間がかかります．というか，手先が不器用なのでただでさえ時間がかかるのに・・・\n後ろに人がいると，自分で詰まってしまって，ただただ申し訳なく切ない気持ちになります．\n外出時以外でも 夕飯の支度とか，食器の片づけとか，普段のちょっとした動作の中で，今手に持っているものをどこにどかせば良いのか，次に何を手に持てば良いのか，うまく脳内で計算できません．普通の人ならすぐ終わる作業が，2～3倍くらいの時間がかかってしまいます．\nまとめ とにかく日頃の生活において，カバン類や手に持っている荷物を瞬間的に捌くのが，本当に苦手です．全体的な動作が，周囲から見てもちょっと「子供っぽい」「もたもたしている」「変な人っぽい」って感じになって，「この人変だよね」って思われて距離を置かれる（もしくは自分でそう見られてると思い込んで距離を置いてしまう）ことがあります．\nもっと要領良く生きていきたいですね・・・\n","date":"2023-03-11T10:07:46+09:00","image":"https://t-asa2000.net/img/pakutaso/Nimotsu1.jpg","permalink":"https://t-asa2000.net/post/202303_02/","title":"発達障害持ちの僕がこまること「荷物が上手く捌けない」"},{"content":"プロローグ 世間一般よりもほんの少しだけPCスキルがある・・・そんな感じの中途半端なデジタルの素質を持ってる筆者なんですが，人生で何回かHPを作ってくれと頼まれたりしてきました．\n今の時代\nWixで誰でも作れるから人に頼まなくても良くね？ Twitterやインスタで宣伝できるからHPなんか要らなくね？ と言われてもおかしくない時代なんですが，それでも「ホームページ」という物への需要はまだ完全に無くなってはいないみたいです．\n今回の記事は，あまり技術関係に詳しくない方向けに書いたものです．\nホームページを作る意味 一番大きなことは「情報の整理・集約化」だと思います．\n例えば，あなたが飲食店の経営者で，毎日，TwitterやInstagramにお店のメニューを写真付きで投稿しているとします．拡散効果は期待できるでしょう．ですが，その情報は\n「時系列順に写真や文章が並んでいるだけ」\nであり，その情報の中にはお店からのお知らせや店主の独り言など，\u0026ldquo;他のカテゴリの情報\u0026rdquo; も含まれていますね．\n「シンプルにお店のメニューだけが見たい」\nと思ったお客さんが，過去の投稿を遡って色んなメニューの説明を見ていくのは非常に利便性(ユーザビリティ)が悪いです．\nそんな時にホームページという，ググれば誰でも見つけられる場所（※）に料理の一覧を置いておくことで，必要な人が必要な時に情報を得ることができます．\n※ググれば誰でも見つけられる場所といいましたが，Google 検索で上位に表示されるにはある程度の閲覧数が必要です．\nホームページの正体 「ホームページの正体」と言うと語弊があるので「Webページの正体」の方が適切かもしれません．\n↓ざっくり言ってしまうとこれが「Webページの正体」です．\n信じられないかもしれませんが，このダラダラと長いコードが「Webページ」です．極端な話，皆さんが普段見てるTwitter(アプリではなくブラウザ版)の正体もこれです．\nここで，恐らく皆さんの頭にこんな疑問が出てくると思います．\nQ. でもwixとかホームページ・ビルダーって見た目そのままに作れるよ？\n簡潔に言います．コードに起こす作業をwixやホームページ・ビルダーがあなたの代わりにやってます．\n勿論，今どきのWeb屋さんもケースバイケースですが，人の手で書くコードは最小限に減らすための色々な工夫をしています．あの長いコード全てを自分で書くことはごく稀でしょう．\nホームページに関わる3つの要素 ホームページを作るうえで抑えておきたいのが，以下の3つの要素です．\nホームページの中身（を生成するためのツール） サーバー（ホームページの置き場所） ドメイン（置き場所の住所） ドメインというのは，www.google.co.jp みたいなやつのことです．\n中身・サーバー・ドメインが全てセット 1.と2.と3.が全てセットになったのが「wix」や「Google サイト」みたいなものです．パワポ感覚でHPが作れます．業者に頼めないし簡易的なものでいいから作りたい，という用途には最適です．\nただもちろん無料なので制約は色々あります．一番大きいのが「ドメイン」の制約だと思います．wix使ったことがないので分かりませんが，ドメインは「〇〇.wix.com」みたいな形式になると思います．間違ってたらごめんなさい．\nあと，wixの場合は画面内に「wixを使いませんか」みたいな広告が常駐するので，見栄えは悪くなりますね．\n中身を作ってサーバー・ドメインは別に用意 恐らく2000年代まで個人で作るホームページの主流がこれ．「ホームページ・ビルダー」などのソフトウェアを使って，見た目通りに作成します．その後，生成されたファイルをサーバーに手動でアップロード(コピー)します．\n中身をパソコンの中で作ってから，サーバーに持っていくイメージです．\nこのサイトも，ホームページ・ビルダーとは全く別物ですが，「静的サイトジェネレーター」と呼ばれるツールを使って，PCの中でファイルを作ってから公開しています．\nお金払ってサーバー契約すれば，広告も勝手に載りませんし，ドメインも自分で契約したものを自由に使えるので，これが一番ホームページらしいホームページが作れるかと思います．\nwixみたいなシステムをサーバーの中に設置してしまう(奥の手) 実は，先ほどの1+2+3の方法のように，ブラウザ上で更新してそのまま公開するシステムを，wixなどの大手サービスに頼らなくても，自分のサーバー内に設置することができます．\nそれが「CMS」と呼ばれるツールで，代表的なものがWordPressです．\nただこれは環境構築が専門の知識がいることと，サーバーの中にデータベースを作成したりするため，システムが煩雑になりやすいという欠点があります．また，セキュリティ的なリスクもあり，万全な体制と人的余裕がなければ基本おすすめできません．\nサーバー周りの管理をする専門の知識・技術を持った人がいて，それと別に内容を更新する人がいるのであれば，最適な方法だと思います．\nHP作りを友人・知人に委託したい人へ 私はちゃんとした仕事としてWeb屋をやっている訳ではないので，世の中のWeb屋さん達がどういう風に仕事をしているのかは分かりません．\nただ，個人的に今まで色々HPを作って来て思うのが，以下の点については，委託側と受託側で認識を共有して置いた方がいいような気がしました．\n更新頻度 最初に基本的な情報(飲食店の例:アクセス，メニューなど)を書いたら後は放置する，あるいは最初の更新以降も定期的にお知らせなどを発信する，どれくらいのペースで更新していきたいのかは，予めイメージしておいた方がいいと思います．\nどこまでを自分でやるか 本当に何も分からないと言う場合は，載せたい内容をWordファイルにまとめたり簡単なメモにして送ったり，という感じで良いと思いますし，逆に自分でも直接手を加えたい場合は，相手にもその旨伝えておいた方が良いかと思います．\nどこまで相手に介入させるか ホームページの中身だけを作って欲しいか，サーバー内のファイルの操作も許可するか，そこら辺のルールもしっかりと決めておいた方がいいかもしれません．\n引き継ぎ これが一番難しいかなと思いました．先述の通り，我々も全てのコードを手打ちしている訳ではなく「ツール」に頼っているのですが，そのツールもホームページ・ビルダーのような初心者向けではなく，そこそこのスキルが求められる上級者向けのツールだったりします．\n例えば，このサイトは「Hugo」というツールを使って作ったのですが，この更新を後任者に引き継ぐのであれば，Hugoが使える人を引っ張ってくるか，最低限使い方をレクチャーするかしないといけない訳です．\nもっと面倒くさいのが「WordPress」のようなCMSで，例えばシステムがぶっ壊れた時の応急措置やら，データベース周りのパスワードやら，引き継がないといけない内容が多いこと，\nさらに，プラグインを使って機能を拡張していくのでシステムが煩雑になって・・・面倒くさいです．正直言ってあまり手を出したくないのです(使っている最中は楽だけど)\nまとめ という訳で，今回の記事を通して伝えたかったことは\nHPを作る目的を今一度確認して欲しい 中身＋サーバー＋ドメインの組み合わせを理解して欲しい 誰かに頼むなら色々なルール決めや認識共有をして欲しい ということでした．最後までご覧いただきありがとうございました．\n","date":"2023-03-10T01:36:26+09:00","image":"https://t-asa2000.net/post/20230310/img1_hu1629b1e70125ae81c1553999b8d82eb5_84211_120x120_fill_box_smart1_3.png","permalink":"https://t-asa2000.net/post/20230310/","title":"「ホームページを作って欲しい」って言ってきた人に見せる記事"},{"content":"ネタがない 町内\nなななな なななな\n終\nーーー\nＮＨＫ\n","date":"2023-03-09T18:46:26+09:00","image":"https://t-asa2000.net/img/default.jpg","permalink":"https://t-asa2000.net/post/20230309/","title":"ネタ切れ"},{"content":"これまで格安VPSでWordPressサイトをホスティングしてましたが，色々な事情を考慮した結果 GitHub Pages + Hugo に移行しました．\n移行と言ってもめんどくさかったので過去記事は全て消滅させました（笑）\nテーマ等は使わず，僕が以前手打ちHTML+CSSで作った個人サイトをベースに再構成しています．\n（厳密にはHugoで生成してるのはブログ部分のみで，プロフィールページ等はHugoのシステムからは独立させています．）\n2023.3.6 追記\nコードブロックが使いたかったので，テーマを採用しました．個人サイトとブログを統合しました．\nhttps://github.com/CaiJimmy/hugo-theme-stack\n","date":"2022-09-03T00:00:00Z","image":"https://t-asa2000.net/img/default.jpg","permalink":"https://t-asa2000.net/post/20220903/","title":"Hugoに移行してみた"}]